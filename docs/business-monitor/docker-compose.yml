# 命令执行 docker-compose -f docker-compose.yml up -d
version: '3.9'
services:
  redis:
    image: redis:7.2.0
    container_name: redis
    restart: always
    hostname: redis
    ports:
      - 16379:6379
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - my-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  redis-admin:
    image: spryker/redis-commander:0.8.0
    container_name: redis-admin
    hostname: redis-commander
    restart: always
    ports:
      - 8081:8081
    environment:
      - REDIS_HOSTS=local:redis:6379
    networks:
      - my-network
    depends_on:
      redis:
        condition: service_healthy

  mysql:
    image: mysql:8.0.32
    container_name: monitor-mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: 123456
    networks:
      - my-network
    ports:
      - "23306:3306"
    volumes:
      - ./mysql/sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 15s

  # phpmyadmin https://hub.docker.com/_/phpmyadmin
#  phpmyadmin:
#    image: phpmyadmin:5.2.1
#    container_name: phpmyadmin
#    hostname: phpmyadmin
#    ports:
#      - 8899:80
#    environment:
#      - PMA_HOST=mysql
#      - PMA_PORT=3306
#      - MYSQL_ROOT_PASSWORD=123456
#    depends_on:
#      mysql:
#        condition: service_healthy
#    networks:
#      - my-network

networks:
  my-network:
    driver: bridge
